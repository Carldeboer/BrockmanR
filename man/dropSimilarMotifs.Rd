% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/k-mer_enrichment.R
\name{dropSimilarMotifs}
\alias{dropSimilarMotifs}
\title{Drop any motifs that appear to be redundant}
\usage{
dropSimilarMotifs(motifEnrichments, motifSimilarity, similarityCutoff = 0.5)
}
\arguments{
\item{motifEnrichments}{data.frame as made by getKMerTFEnrichment, and merged with cisbp$TFTable, such that it has column names including  c("Motif_ID", "direction","p","TF_Name","PC"))}

\item{motifSimilarity}{three column data frame (cisbp$similarMotifs), with columns c("Motif_ID1", "Motif_ID2", "R") describing pairwise motif similarity.}

\item{similarityCutoff}{a cutoff above which motifs are considered to be redundant.}
}
\value{
Returns a filtered version of motifEnrichments with a new column "wereRedundant" containing all the Motif_IDs that were redundant with the remaining Motif_ID
}
\description{
Uses a table of correlations between motifs' k-mer z scores (as in cisbp$similarMotifs) to remove those that appear to be redundant, taking the best one in cases where motifs are very similar.  Takes the best one independently for each PC/enrichment direction, so different PCs might get different motifs as the best representative motif.
}
\examples{
kmerMat = inputKMerFreqs(sprintf("kMerFiles/\%s.freq.gz",sampleDesc$id), IDs = sampleDesc$id)
myPCA = doKMerPCA(kmerMat, nPCs = "jackstraw")
treatmentPCs = findDistinguishingPCs(myPCA$rotation[,1:myPCA$nPCs], sampleDesc[c("id","treated")])
tfEnrichmentsPBM = getKMerTFEnrichment(myPCA$rotation[,1:myPCA$nPCs], cisbp$binaryPBMZScores);
tfEnrichmentsPBM = tfEnrichmentsPBM[order(tfEnrichmentsPBM$p),]
tfEnrichmentsPBM = merge(tfEnrichmentsPBM2, cisbp$TFTable[c("Motif_ID","TF_Name")], by="Motif_ID") # add TF names
tfEnrichmentsPBM = preferDirect(tfEnrichmentsPBM, cisbp$TFTable)
tfEnrichmentsPBM$Bon.P = tfEnrichmentsPBM$p + log(nrow(tfEnrichmentsPBM)) +  log(3000) #approximate Bonferroni MHT correction; multiply by 3000 for n_max
tfEnrichmentsPBM = tfEnrichmentsPBM[tfEnrichmentsPBM$Bon.P < log(0.01),] # cutoff of P<0.01
tfEnrichmentsPBM_NR = dropSimilarMotifs(tfEnrichmentsPBM, cisbp$similarMotifs);
}
